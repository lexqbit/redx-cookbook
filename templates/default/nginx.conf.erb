lua_package_path "<%= node['redx']['dir'] %>/lib/?.lua;<%= node['redx']['dir'] %>/conf/?.lua;<%= node['redx']['dir'] %>/bin/?.lua;;";

init_by_lua_file '<%= node['redx']['dir'] %>/bin/init_redx.lua';

upstream fallback {
<% node['redx']['fallback_servers'].each do |server|%>
  server <%= server %>;
<% end %>
}

server {
    # API
    <% node['redx']['nginx']['api_ports'].each do |port| %>
    listen <%= port %>;
    <% end %>

    lua_code_cache <%= node['redx']['nginx']['lua_code_cache'] %>;

    location / {
        default_type application/json;
        access_by_lua_file '<%= node['redx']['dir'] %>/bin/api.lua';
    }
}

server {
    # MAIN
    <% node['redx']['nginx']['main_ports'].each do |port| %>
    listen <%= port %>;
    <% end %>

    lua_code_cache <%= node['redx']['nginx']['lua_code_cache'] %>;

    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Protocol $scheme;
    proxy_set_header X-Real-IP $remote_addr;

    proxy_read_timeout <%= node['redx']['nginx']['proxy_read_timeout'] %>;
    proxy_connect_timeout <%= node['redx']['nginx']['proxy_connect_timeout'] %>;
    proxy_buffering <%= node['redx']['nginx']['buffering'] %>;

    # set default upstream in case reference not found in redis
    set $upstream 'fallback';

    location / {
        access_by_lua_file '<%= node['redx']['dir'] %>/bin/main.lua';

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_intercept_errors on;
        error_page 502 504 = @fallback;
        proxy_pass http://$upstream;
    }

    location @fallback {
        proxy_pass http://fallback;
    }
}
